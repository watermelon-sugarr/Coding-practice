// 287. Find the Duplicate Number
//Brute force - SORT & COMPARE
    int findDuplicate(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        for(int i=1;i<nums.size();i++){
            if (nums[i] == nums[i-1]){
                return nums[i];
            }
        }
        return -1;
    }
//Using hashmap
    int findDuplicate(vector<int>& nums) {
        unordered_map <int,int> mp;
        for(int i: nums){
            mp[i]+=1;
        }
        for(auto& i: mp){
            if (i.second > 1){
                return i.first;
            }
        }
        return -1;
    }
//Using frequency vector 
int findDuplicate(vector<int>& nums) {
        int n = nums.size();
        vector <int> freq(n+1,0);
        for(int i: nums){
            freq[i]+=1;
        }
        for(int i=0; i<freq.size(); i++){
            if (freq[i] > 1){
                return i;
            }
        }
        return -1;
    }
